<?xml version="1.0"?>
<launch>

  <!-- Namespace arguments -->
  <arg name="ns_guidance"   default="guidance"/>
  <arg name="ns_controller" default="controllers"/>
  <arg name="ns_rm"         default="rm"/>
  <arg name="ns_thrust"     default="thrust"/>

  <!-- Configuration parameters -->
  <param name="/velocity_controller/odometry_topic" value="/odometry/filtered" />
  <param name="/velocity_controller/thrust_topic" value="/auv/thruster_manager/input" />

  <!-- Static transforms (needed for VTF controller)-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="odom_ned_frame_publisher"
    args="0 0 0 1.5707963267948966 0 3.141592653589793 odom odom_ned" />
    
  <group if="$(eval type == 'simulator')"> <!--These are very hacky, but to do it proper means fixing whole tf tree for simulator-->
    <node pkg="tf2_ros" type="static_transform_publisher" name="odom_world_frame_publisher"
    args="0 0 0 0 0 0 odom world" />    
    <node pkg="tf2_ros" type="static_transform_publisher" name="odom_auv_odom_frame_publisher"
    args="0 0 0 0 0 0 odom auv/odom" /> 
  </group>


  <!-- Guidance nodes -->
  <group ns="$(arg ns_guidance)">
    <node pkg="interface"          type="guidance_interface.py"   name="interface"    output="screen"/>
   <!-- <node pkg="joystick_guidance"  type="joystick_guidance.py"    name="joystick"     output="screen"/>
 --> </group>


  <!-- Controller nodes -->
  <rosparam command="load" file="$(find dp_controller)/config/dp_Client.yaml"/>
  <rosparam command="load" file="$(find dp_controller)/config/dp_PID.yaml"/>
  <rosparam command="load" file="$(find dp_reference_model)/config/reference_model.yaml"/>
  <node pkg="dp_controller"       type="dp_controller_node"         name="dp_controller"        output="screen">
    <param name="launch_type" value="$(arg type)" />
  </node>
  <node pkg="dp_reference_model"       type="dp_reference_model_node"         name="dp_reference_model"        output="screen" />

  <group ns="$(arg ns_controller)">
    <group if="$(eval type == 'simulator')">
      <param name="/thrust/thrust_topic" value="/auv/thruster_manager/input"/>
    </group>

    <!-- <node pkg="velocity_controller" type="velocity_controller_node"   name="velocity_controller"  output="screen"/> -->
    <!-- <node pkg="vtf_guidance_and_control" type="vtf_server.py"     name="vtf_server"   output="screen"/>   -->
    <include file="$(find vtf_guidance_and_control)/launch/guidance_and_control.launch"/>
  </group>

  <!-- Thrust nodes -->
  <group ns="$(arg ns_thrust)">
    <group if="$(eval type == 'real')">
      <node pkg="thruster_allocator"  type="thruster_allocator_node"     name="thruster_allocator"/>
    </group>
  </group>

</launch>
